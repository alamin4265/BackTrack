@using BackTrack.Models
@model BackTrack.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    List<Product> productList = ViewBag.TopProductList;
}

<div class="content-wrapper" style="background-color:white">
    <section class="content-header">
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-users"></i>Initial Setup</a></li>
            <li class="active">Product</li>
        </ol>
    </section>
    <br />
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-6">
                <h5><b>Create Product</b></h5>
            </div>
            <div class="col-md-6">
                <div class="breadcrumb-elements" style="float:right">
                    <div class="heading-btn-group">
                        <a href="../Product/Index" class="btn btn-link btn-float has-text">
                            <i class="glyphicon glyphicon-list"></i><br /><span>All Product</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <!-- Up To -->

        @if (TempData["message"] != null)
        {
            <div class="alert alert-success" id="msg">
                <strong>Success!</strong>@TempData["message"].ToString()
            </div>
        }

        <div class="row">
            <div class="col-md-6">

                @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken();

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.BuyPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.BuyPrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BuyPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SellPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SellPrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SellPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Warrenty, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Warrenty, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Warrenty, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select class="form-control" id="CategoryId" name="CategoryId">
                                    @{
                                        List<Category> cat = new BackTrack.Models._ShowroomDB().Category.Where(c => c.CategoryId == null).ToList();
                                        <option value="">Select</option>
                                        foreach (var c in cat)
                                        {

                                            <optgroup label="@c.Name">
                                                @if (c.Categories.Count() > 0)
                                                {
                                                    foreach (var sc in c.Categories)
                                                    {
                                                        <option value="@sc.Id">@sc.Name</option>
                                                    }
                                                }
                                                else
                                                {
                                                    <option value="@c.Id">@c.Name</option>
                                                }

                                            </optgroup>
                                        }

                                    }
                                </select>
                                @*@Html.DropDownList("CategoryId", null, "Select", htmlAttributes: new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BrandId, "Brand", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("BrandId", null, "Select", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SizeId, "Size", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("SizeId", null, "Select", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SizeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ColorId, "Color", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ColorId", null, "Select", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ColorId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="file" name="Image" id="Image" class="form-control" />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-success  pull-right" />
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="col-md-6">
                @if (productList.Count() > 0)
                {
                    <table class="table table-responsive table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>
                                    Product Name
                                </th>
                                <th>
                                    Price
                                </th>
                                <th>
                                    Quantity
                                </th>
                                <th style="text-align: center">
                                    Action
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in productList)
                            {
                                <tr>
                                    <td>
                                        @item.Name
                                    </td>
                                    <td>
                                        @item.SellPrice
                                    </td>
                                    <td>
                                        @item.Quantity
                                    </td>
                                    <td style="text-align: center">
                                        @Html.ActionLink("Details", "Details", new { id = @item.Id }, new { @class = "btn btn-xs btn-primary" })
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </section>
</div>
